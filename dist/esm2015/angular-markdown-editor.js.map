{
  "version": 3,
  "file": "angular-markdown-editor.js",
  "sources": [
    "ng://angular-markdown-editor/out/lib/angular-markdown-editor/angular-markdown-editor.module.ts",
    "ng://angular-markdown-editor/out/lib/angular-markdown-editor/angular-markdown-editor.component.ts",
    "ng://angular-markdown-editor/out/lib/angular-markdown-editor/markdown-editor-config.ts",
    "ng://angular-markdown-editor/out/lib/angular-markdown-editor/global-editor-options.ts"
  ],
  "sourcesContent": [
    "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AngularMarkdownEditorComponent } from './angular-markdown-editor.component';\nimport { EditorOption } from './models';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AngularMarkdownEditorComponent],\n  exports: [AngularMarkdownEditorComponent],\n  entryComponents: [AngularMarkdownEditorComponent]\n})\nexport class AngularMarkdownEditorModule {\n  static forRoot(config: EditorOption = {}) {\n    return {\n      ngModule: AngularMarkdownEditorModule,\n      providers: [\n        { provide: 'config', useValue: config }\n      ]\n    };\n  }\n}\n",
    "import { AfterViewInit, Component, ElementRef, forwardRef, Inject, Injectable, Input, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EditorLocale, EditorOption, Dictionary } from './models';\nimport { GlobalEditorOptions } from './global-editor-options';\n\ndeclare var $: any;\n\nexport const MARKDOWN_EDITOR_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AngularMarkdownEditorComponent),\n  multi: true\n};\n\n@Injectable()\n@Component({\n  moduleId: 'angulaMarkdownEditor',\n  selector: 'angular-markdown-editor',\n  template: '<textarea #markdownEditorElm id=\"{{textareaId}}\" name=\"{{textareaId}}\" data-provide=\"markdown\" rows=\"{{rows}}\"></textarea>',\n  providers: [MARKDOWN_EDITOR_VALUE_ACCESSOR]\n})\nexport class AngularMarkdownEditorComponent implements AfterViewInit {\n  @ViewChild('markdownEditorElm') elm: ElementRef;\n\n  /** Locale set that has a language and dictionary that can be added as an alternative language. Can be 1 or more dictionaries */\n  @Input()\n  set locale(locale: EditorLocale | EditorLocale[]) {\n    this.addLocaleSet(locale);\n  }\n\n  /** Id of the textarea DOM element used by the lib */\n  @Input() textareaId: string;\n\n  /** Markdown Editor Options to pass to the element */\n  @Input() options?: EditorOption;\n\n  /** Number of rows for the textarea */\n  @Input() rows = 10;\n\n  public value: any | any[];\n  public onModelChange: Function = () => {};\n  public onModelTouched: Function = () => {};\n\n  constructor(@Inject('config') private forRootConfig: EditorOption) {}\n\n  ngAfterViewInit() {\n    this.initialization();\n  }\n\n  addLocaleSet(editorLocale: EditorLocale | EditorLocale[]) {\n    if (!editorLocale) {\n      return;\n    }\n    if (Array.isArray(editorLocale)) {\n      editorLocale.forEach((locale: EditorLocale) => $.fn.markdown.messages[locale.language] = locale.dictionary);\n    } else {\n      $.fn.markdown.messages[editorLocale.language] = editorLocale.dictionary;\n    }\n  }\n\n  initialization() {\n    // get all default options to get the entire list of onEvent so that we can attach Dispatch Custom Event to them\n    // we also merge these with the options, and pass these merged options to the hookToEditorEvents() method to cover all onEvent callbacks\n    const markdownDefaultOptions = $.fn.markdown.defaults;\n\n    // re-hook new events that were optionally defined in the options\n    // merge the options, the order matters (last options on the right have higher priorities)\n    const options = { ...markdownDefaultOptions, ...GlobalEditorOptions, ...this.forRootConfig, ...this.options };\n\n    // hook all events to respective callbacks\n    // 1- could be coming from a Dispatched Event in the View:: (onX)=\"do()\"\n    // 2- or from editor option callback in the Component:: const options = { onX: () => do() }\n    this.hookToEditorEvents(options);\n\n    // hook to the onChange event to update our model\n    // however we don't want to override the previous callback, so we will run that one to if exists\n    const previousOnChange = options.onChange;\n    options.onChange = (e) => {\n      this.onModelChange(e && e.getContent && e.getContent());\n      if (typeof previousOnChange === 'function') {\n        previousOnChange(e);\n      }\n    };\n\n    // finally create the editor\n    $(`#${this.textareaId}`).markdown(options);\n  }\n\n  /**\n   * Hook any of the editor event(s) to Dispatch Custom Event so that we can use them in Angular with (onX)=\"doSomething($event.detail.eventData)\"\n   * @param editor options\n   */\n  hookToEditorEvents(options) {\n    for (const prop in options) {\n      if (options.hasOwnProperty(prop) && prop.startsWith('on')) {\n        const previousEvent = options[prop];\n\n        // on Callback triggered\n        options[prop] = (e) => {\n          // Dispatch a Custom Event, so that the (onX)=\"do()\" from the View works\n          this.dispatchCustomEvent(prop, { eventData: e });\n\n          // if an event was passed through the options (instead of dispatch), and is not empty function, then we need to run it as well\n          // basically we don't want the Dispatch Custom Event (onX)=\"do()\" to override the ones passed directly in the editor option callbacks\n          if (typeof previousEvent === 'function') {\n            previousEvent(e);\n          }\n        };\n      }\n    }\n  }\n\n  /**\n   * Write value to the native element\n   * @param value string\n   */\n  writeValue(value: string): void {\n    this.value = value;\n\n    // preset values in the DOM element\n    if (this.value) {\n      this.elm.nativeElement.value = this.value;\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  /** Dispatch of Custom Event, which by default will bubble & is cancelable */\n  private dispatchCustomEvent(eventName: string, data?: any, isBubbling: boolean = true, isCancelable: boolean = true) {\n    const eventInit: CustomEventInit = { bubbles: isBubbling, cancelable: isCancelable };\n    if (data) {\n      eventInit.detail = data;\n    }\n    return this.elm.nativeElement.dispatchEvent(new CustomEvent(eventName, eventInit));\n  }\n}\n",
    "import { GlobalEditorOptions } from './global-editor-options';\n\nexport class MarkdownEditorConfig {\n  options: any;\n\n  constructor() {\n    this.options = GlobalEditorOptions;\n  }\n}\n",
    "import { EditorOption } from './models/editorOption.interface';\n\nexport const GlobalEditorOptions: EditorOption = {\n  autofocus: false,\n  disabledButtons: [],\n  dropZoneOptions: null,\n  enableDropDataUri: false,\n  footer: '',\n  height: 'inherit',\n  hiddenButtons: ['cmdQuote'],\n  hideable: false,\n  iconlibrary: 'glyph',\n  initialstate: 'editor',\n  language: 'fr',\n  additionalButtons: [\n    [{\n    name: 'groupFont',\n    data: [{\n      name: 'cmdStrikethrough',\n      toggle: false,\n      title: 'Strikethrough',\n      icon: {\n        fa: 'fa fa-strikethrough',\n        glyph: 'glyphicon glyphicon-minus'\n      },\n      callback: (e) => {\n        // Give/remove ~~ surround the selection\n        let chunk;\n        let cursor;\n        const selected = e.getSelection();\n        const content = e.getContent();\n\n        if (selected.length === 0) {\n          // Give extra word\n          chunk = e.__localize('strikethrough');\n        } else {\n          chunk = selected.text;\n        }\n\n        // transform selection and set the cursor into chunked text\n        if (content.substr(selected.start - 2, 2) === '~~' &&\n          content.substr(selected.end, 2) === '~~') {\n          e.setSelection(selected.start - 2, selected.end + 2);\n          e.replaceSelection(chunk);\n          cursor = selected.start - 2;\n        } else {\n          e.replaceSelection('~~' + chunk + '~~');\n          cursor = selected.start + 2;\n        }\n\n        // Set the cursor\n        e.setSelection(cursor, cursor + chunk.length);\n      }\n    }]\n    },\n    {\n      name: 'groupMisc',\n      data: [{\n        name: 'cmdTable',\n        toggle: false,\n        title: 'Table',\n        icon: {\n          fa: 'fa fa-table',\n          glyph: 'glyphicon glyphicon-th'\n        },\n        callback: (e) => {\n          // Replace selection with some drinks\n          let chunk;\n          let cursor;\n          const selected = e.getSelection();\n\n          chunk = '\\n| Tables        | Are           | Cool  | \\n'\n            + '| ------------- |:-------------:| -----:| \\n'\n            + '| col 3 is      | right-aligned | $1600 | \\n'\n            + '| col 2 is      | centered      |   $12 | \\n'\n            + '| zebra stripes | are neat      |    $1 |';\n\n          // transform selection and set the cursor into chunked text\n          e.replaceSelection(chunk);\n          cursor = selected.start;\n\n          // Set the cursor\n          e.setSelection(cursor, cursor + chunk.length);\n        }\n      }]\n    }]\n  ]\n};\n"
  ],
  "names": [],
  "mappings": "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"
}
